### ðŸ§® Problem: Second Largest Element in Array

**Given** an array of positive integers `arr[]`, return the second largest element from the array.  
If the second largest element doesn't exist, return `-1`.

**Note**: The second largest element should not be equal to the largest element.

---

#### ðŸ§¾ Examples:

**Input:**  
`arr = [12, 35, 1, 10, 34, 1]`  
**Output:**  
`34`  
**Explanation:**  
The largest element is 35, the second largest is 34.

**Input:**  
`arr = [10, 5, 10]`  
**Output:**  
`5`  
**Explanation:**  
The largest element is 10, second largest is 5.

**Input:**  
`arr = [10, 10, 10]`  
**Output:**  
`-1`  
**Explanation:**  
All elements are equal, so second largest does not exist.

---

#### ðŸ”’ Constraints:

- `2 â‰¤ arr.length â‰¤ 10^5`
- `1 â‰¤ arr[i] â‰¤ 10^5`

---

### âœ… Python Solution

```python
class Solution:
    def getSecondLargest(self, arr):
        largest = second_largest = -1
        for num in arr:
            if num > largest:
                second_largest = largest
                largest = num
            elif num > second_largest and num != largest:
                second_largest = num
        return second_largest

# Example usage
if __name__ == "__main__":
    sol = Solution()
    print(sol.getSecondLargest([12, 35, 1, 10, 34, 1]))  # Output: 34
    print(sol.getSecondLargest([10, 5, 10]))             # Output: 5
    print(sol.getSecondLargest([10, 10, 10]))            # Output: -1

        
